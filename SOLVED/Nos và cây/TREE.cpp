/*⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⡟⢤⠓⣜⢢⢣⣙⣾⣛⢯⣟⢿⡻⣟⡿⣿⣻⡟⣿⡿⣿⣶⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⡿⢆⢣⢛⣬⡲⣏⡟⡶⣭⣛⣮⢟⣽⣹⣛⣷⣿⣝⢧⡿⣜⢿⡹⣟⡿⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⢿⠟⡩⡍⢦⣱⢎⡿⣹⢖⣻⡵⣻⣝⣧⣟⣾⣹⢮⢷⣛⡾⣼⣿⣞⣳⣭⡻⣽⣺⠵⣏⢿⣻⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⢏⣻⣌⣦⣱⣞⣧⣛⣮⢷⡹⣞⢧⣻⠵⣞⣧⣛⡶⢯⣻⣻⢼⡳⢿⣿⣿⣷⡭⢷⣻⣿⣻⣾⣯⢳⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣾⠾⠿⠛⠛⠛⠋⡉⢉⡉⠙⠙⢛⢛⠛⠻⠿⢿⣿⣼⣶⣯⡽⣏⡷⣭⢷⣛⡯⢿⣿⣿⣿⢧⣏⣿⣷⣻⣿⣧⣟⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣼⣿⣥⡷⠞⠛⢛⣻⣿⣛⠛⠉⠉⣙⣿⣿⠿⠛⠖⢶⢦⣤⣌⣉⠙⠛⠿⣾⣽⣞⡧⣟⢯⡞⣽⣻⣿⣼⣿⣿⣿⣿⣿⣮⡽⣿⣷⣶⣶⣶⣶⣶⠶⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣿⢏⣽⠟⠛⢶⣶⣟⣉⣈⣙⣷⣶⣟⣋⣁⣙⡳⣶⠞⠛⠛⠛⢾⣍⠛⠳⢦⣤⣉⠛⠿⢷⣿⣞⣳⡭⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⠀⠈⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣠⣾⣿⣿⣷⡾⡿⠿⢿⠻⣟⣻⢛⡟⣻⢛⡟⡿⢿⢿⣿⣿⣶⣶⣤⣤⣙⣷⣄⣠⣤⣭⣿⢶⣤⣉⠛⢷⣿⣿⣿⣿⣿⡟⠻⣿⣿⣿⣿⣿⣿⠿⠛⠻⣦⣀⣤⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣶⣶⡿⢿⠿⣛⠻⣍⠻⣔⣣⢞⡱⣏⠞⣽⢲⣥⢻⡜⣷⢻⡼⣫⢟⣮⢶⣭⠷⣯⢟⡿⡿⣿⣿⣷⣤⣄⡠⠈⣻⣏⠓⢦⣌⡻⢿⣿⣿⣧⠀⠀⠈⠉⠛⠉⠀⠀⠀⠀⠈⣹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣿⡿⣟⠛⠯⣍⢦⡙⣎⢳⡭⢳⢎⠿⣸⡱⣎⢗⢮⢻⡜⣧⢞⣧⢻⡜⣧⡻⣵⣫⢞⣳⣞⣻⣭⣟⡾⣽⣳⢯⣻⡽⣿⣿⣷⣴⣿⣦⣦⣬⣿⣷⣙⠻⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣋⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣻⣯⣭⣶⣵⣬⣭⣳⣜⢦⡝⢬⡓⡞⡭⣎⠟⣥⢳⡝⣮⢏⡷⣹⢎⡿⣜⡧⣟⣳⡽⢧⡯⣟⡵⣞⡷⣞⡾⣽⣳⢯⣟⣷⣻⣳⡽⣏⡿⣿⣿⣷⣬⣻⣛⣿⣿⣾⣻⢶⣄⠀⠀⠀⠀⠀⣠⡞⠉⠀⠈⠙⢷⡄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⣴⣾⣿⣿⠿⢟⡻⢍⠯⢭⡹⢍⠯⣙⡛⣛⢿⣿⠟⠿⠷⣷⣮⣽⣎⡳⣞⡵⣫⢞⣳⡻⣞⣧⢟⡾⣱⡟⣯⠷⣏⡿⣽⠾⣝⡷⣯⢷⣻⢮⡷⣯⢷⣻⣽⣻⢷⣯⢿⣿⣿⣿⣧⣸⣏⢿⡷⣿⣷⣄⠀⠀⠐⣿⠀⠀⠀⠀⢀⣾⣷⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣠⣴⣿⣿⢿⡛⠵⣊⡝⢦⣙⢮⡙⢦⡙⣎⠳⣥⣚⣶⠟⠁⠀⠀⠀⠀⠈⠉⠛⠛⠿⢾⣷⣯⣳⢏⡷⣞⣯⢟⣷⣻⡽⣻⡽⣽⡞⣿⡽⣻⣞⣯⠿⣽⣳⢯⣟⣷⣫⣽⣻⣞⡿⣮⢟⣿⣿⣿⣿⣜⣿⣤⣽⣿⣧⡀⠀⠻⣦⣀⠠⣄⣸⣾⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢠⣾⣿⣿⣯⣇⢧⡙⢮⡱⢞⡱⢎⠶⣙⢦⡙⢦⣻⣼⠟⠁⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⢿⣽⣞⡿⣞⣳⣟⣷⣻⢷⣻⢷⣻⢷⣛⣾⣻⠷⣯⣟⣾⣳⣟⣾⣳⢯⢿⣽⣻⣞⡷⣯⢿⣿⣿⣿⣿⣯⣿⠇⠀⠀⠈⠙⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣰⣿⣿⠋⢉⡉⠛⠿⣾⣥⡚⡥⢛⡬⢳⡍⠶⣹⣽⡿⠃⠀⠀⠀⠀⠀⣠⠏⠀⠀⠀⠀⢠⡏⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⣷⣟⣾⡽⣯⣟⣯⣟⣯⣟⡾⣽⣻⢷⣻⣞⣷⡻⣾⢽⣯⣟⣾⣳⢯⡿⣽⢯⣟⡿⣿⣿⣿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢠⣿⣿⠃⠌⡘⣀⠣⠐⡠⠙⠿⣷⣭⢒⢧⣚⣵⣿⠟⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣷⣿⡾⣽⢾⣽⣻⢷⣯⣟⣷⣻⢾⡽⣯⣟⣶⣻⢾⡽⣯⢿⣽⣻⢾⣽⣳⢿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣼⣿⡟⡀⢂⠱⢀⠊⡑⢠⢁⠂⠌⣿⣯⣶⣿⣿⠋⠀⠀⠀⠀⠀⠀⡼⠁⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢩⡿⠿⣿⣾⣽⣻⢾⡽⣾⡽⣯⣟⣷⣻⢾⡽⣯⣟⣷⣻⢾⣽⣻⢾⣽⣻⢾⡽⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢿⣿⡷⠀⡅⢚⠠⢁⢂⠡⢊⡐⠀⣿⣿⣿⡿⣡⠄⠀⠀⠀⠀⠀⣼⠃⠀⠀⢠⡆⠀⠀⣿⠁⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣷⠀⠈⠙⠻⢿⣿⣽⣳⣟⣷⣻⢾⡽⣯⣟⣷⣻⢾⣽⣻⢾⣽⣻⢾⡽⣯⣟⣷⡻⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⣿⣿⠐⡀⢣⠌⢂⠐⠌⡂⠄⢃⣿⣿⠟⣴⠋⠀⠀⠀⠀⠀⢰⡏⠀⠀⠀⣼⠀⠀⣸⣿⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⢿⣿⠀⠀⠀⠀⡀⠈⠛⠿⣾⣷⣯⣟⡿⣳⣟⡾⣽⣻⢾⣽⣻⢾⡽⣯⣟⣷⣻⢾⡽⣯⢿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢿⣿⣧⠐⢡⠂⡌⠰⣈⠰⢈⣸⣿⠫⣼⠃⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⢰⡇⠀⢠⣿⢿⡷⠶⠀⠀⠀⠘⢷⡀⠀⠀⢹⠀⠀⠀⠀⠀⢀⣸⣿⡄⠀⠀⠘⣿⠀⠀⠀⠈⣽⠻⢾⣿⣽⡾⣽⢿⣽⣻⢾⡽⣯⣟⣷⣻⢾⡽⣯⢿⣽⣻⣞⡿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⣿⣿⣧⠂⡌⠤⠑⡀⠆⣼⣿⠃⣼⠃⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⢠⣿⡇⠀⣼⡏⢸⣇⠀⣀⠀⠀⠀⠈⠹⣦⡀⠈⢧⠀⠀⠀⠀⢀⡿⠈⣷⠀⠀⠀⢹⡆⠀⠀⠀⢻⡇⠀⠈⠙⠻⣿⣟⣾⡽⢯⣿⡽⣾⣳⣯⢿⡽⣯⣟⣾⣳⢯⣟⡿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⢿⣿⣷⡀⢂⠔⡠⢹⣿⢃⣾⡏⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⢠⣿⠹⡇⢠⡟⠀⠀⢿⠀⢸⡆⠀⠀⠀⠀⠀⠙⠶⣜⣧⠀⠀⣴⣾⠃⠀⢸⣇⠀⠀⢸⢿⡀⠀⠀⢘⣇⠀⠀⠄⠀⠀⠉⠛⠿⣿⣷⣻⣷⣻⣞⡿⣽⣳⣟⡾⣽⣻⢾⡽⣯⣿⣿⣦⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠹⣿⣿⣶⣈⢰⣿⢃⣾⡿⠀⠀⠀⠀⠀⠀⠀⢀⢿⠀⢀⡾⠋⠀⣇⣼⠁⠀⠀⣘⣧⠈⣿⡄⠀⠀⠀⠀⠀⠀⠀⠈⠃⣸⣧⣇⣀⡀⠀⢻⣆⠀⢨⠈⢳⡄⠀⠈⣿⠀⠀⠀⠀⠘⠦⣄⠀⠸⣏⠛⠷⣿⣾⣽⣳⣟⡾⣽⢯⣟⣯⣟⣷⢻⣿⣿⣷⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⢧⣿⣿⡇⠀⣶⠀⠀⠀⠀⠀⢸⣻⠀⣾⠁⣠⣴⣿⣿⣷⣶⣶⣤⡙⢧⣼⢻⣄⠀⠀⠀⠀⠀⢠⠀⢀⡿⢛⣩⣥⣴⣶⣶⣿⣦⣧⣀⠀⠻⣆⠀⣿⠀⠀⠀⠀⠀⠀⠈⠙⢷⣿⠀⠀⠈⢻⡿⢿⣾⣽⣯⣟⡾⣽⡾⣽⣫⢿⣿⣿⣿⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣾⣿⣿⠀⢀⡿⠀⠀⠀⠀⠀⠈⣿⣾⣯⣾⣿⠿⠛⣿⡿⢟⢿⣿⣿⣶⡜⣇⠙⢦⡀⠀⠀⠀⢸⣧⡾⣧⠿⠿⣿⣟⠿⣻⠿⣿⣿⣿⣿⣦⡙⢷⣿⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⠃⢀⡀⢹⣿⢢⠏⣝⡻⢿⣿⣶⣿⣳⢯⡿⣿⣿⣿⣿⣄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣷⡏⠙⣿⠀⢸⣿⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⠁⠀⢸⣿⣯⣟⣞⣯⣿⣿⡆⠀⠀⠀⢻⢦⣄⠀⠐⢿⠁⠀⠀⣼⣿⣿⣏⣳⢻⡴⣻⢿⡟⢿⣿⣦⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠈⠙⣾⣿⣌⠻⣜⡹⢶⣌⢻⡙⡿⢿⣿⣿⣿⣿⣿⣿⠄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⣟⠀⣾⣿⡀⠀⢸⡄⠀⠀⠈⣿⡎⣿⠀⠀⢺⠋⠉⢿⣿⣿⣿⣿⣧⠀⠀⢀⡿⠖⠋⠙⠲⢾⣇⠀⣸⡏⠉⢻⣿⣿⣷⣷⣿⣿⡇⠀⢻⣿⣷⡤⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⡇⢸⣿⢢⡛⢬⠓⡧⢎⣧⣹⣼⣷⣾⣿⣿⣿⡿⠟⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠃⣿⠀⣿⠸⣇⠀⠀⢷⠀⠀⠀⢹⣷⠈⠀⠀⠘⣿⠟⠋⠻⣿⠿⠛⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠹⡟⠛⠛⠿⠿⠟⢿⣿⣿⡇⠀⣼⣿⠉⠀⠀⠀⠀⠀⠀⠀⣧⢸⡇⠀⠀⢻⣸⡿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠛⠛⠋⠉⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡀⣿⠀⢹⣆⠀⠘⢷⡀⠀⠀⢻⡇⠀⠀⠀⠹⣆⠀⠀⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⠀⠀⠀⠀⠀⠀⣹⠃⠘⣫⠇⠀⠀⠀⠀⠀⠀⠀⢰⣇⣾⠁⠀⠀⠘⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣷⣸⣇⠀⣿⣦⡀⠀⠛⢦⣄⡀⠹⣄⠀⠀⠀⠉⠳⠄⠀⠰⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⣄⠀⠀⠀⢀⡴⠋⢀⡼⠃⠀⠀⠀⢀⣴⠖⠀⠀⣾⢹⡇⠀⠀⠀⠘⢻⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡹⣦⣸⣏⠃⢄⠀⠀⠹⣿⡟⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⢀⣾⣋⣠⣴⢋⣀⣀⣀⣤⡶⠋⠁⠀⠀⣼⢯⡿⡇⠀⠀⠀⠀⠸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣽⣿⡄⠀⠀⠄⠀⠛⢷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠛⠙⠉⠉⠉⠉⢹⣿⡿⠋⠀⠀⠀⠀⣼⣿⠟⠁⢸⡀⠀⠀⠀⠀⢻⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡟⠻⣧⠀⠀⠀⠐⢀⡸⣿⠳⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⣻⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⡟⠉⠀⠀⠀⠀⢀⣼⠟⠁⠀⠀⠘⣇⠀⠀⠀⠀⠈⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⠀⠀⡹⣆⠀⠀⠀⠀⠙⢿⡄⠀⠉⠙⣻⣶⣦⣤⣤⣤⣤⣤⣿⣿⣏⣀⣀⣀⣀⣀⣀⣠⣤⣴⣤⣶⡶⠾⠛⠋⢩⡟⠀⠀⠀⠀⢀⣴⠟⠁⠀⠀⠀⠀⠀⢹⡀⠀⠀⡀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠋⠀⠀⢰⡧⠙⣧⡀⠀⠀⠀⠈⢿⣄⣴⣿⣭⠷⠟⠛⠛⠛⠛⢻⣿⣾⣿⣭⣉⣽⣿⡿⠛⠉⠁⠀⠀⢹⣇⠀⠀⠀⣾⠁⠀⠀⣠⡴⠟⠁⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⢱⡀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡟⠁⠀⠀⣠⣿⠁⠀⠈⠻⣦⡀⠀⠀⠸⣿⣿⣋⠀⠀⠀⠀⠀⠀⢘⣿⣛⣿⣀⡤⣿⡿⢁⣤⣶⣀⣀⣀⣀⣀⣹⣧⠀⢸⡇⢀⣴⡞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡇⠀⠀⠈⣷⡀⠀⠘⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠏⠀⠀⢀⣼⣿⠃⠀⠀⠀⠀⠀⠹⣦⣄⠀⣿⢻⡇⠀⠀⠀⠀⠀⠀⠉⠉⠉⣉⠀⠀⡿⠚⣋⣿⣿⡏⢻⣿⣿⣿⣿⡇⠀⠸⣷⠋⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡌⡷⠀⠀⠀⣿⣷⡄⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⢀⣴⠟⢹⠇⠀⠀⠀⡀⠀⠀⠐⡏⠈⢳⣾⢟⣿⡆⠀⠀⠀⠀⣷⡆⠀⠀⣠⣴⡾⠿⠾⣟⣻⣿⣿⣿⣿⣷⢯⣿⣿⠀⠀⠙⢷⣄⡘⢷⣀⣀⡀⠀⠀⠀⠀⠀⠀⢸⣷⢡⠀⠀⠀⠁⣿⢻⡄⠀⠸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠃⠀⣠⠟⠁⠀⣿⠀⠀⡆⢠⡷⠀⠀⣰⣏⣠⡾⠋⢹⣿⣧⢀⣤⡀⠀⣹⣦⣄⢰⣿⣹⡆⠀⠀⠈⡗⣿⣿⢯⡟⣿⣿⣿⣿⡄⠀⠀⠀⠈⠉⠋⠉⠁⠀⣤⠀⠀⠀⠀⠀⡸⣿⡧⠀⠀⠀⠀⣿⠀⠹⣆⠀⢹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣼⠇⢀⡾⠋⠀⠀⠀⣇⠀⢀⣏⣿⣿⠀⠘⠛⠋⠁⠀⠀⣿⡐⣿⠹⢿⠟⠁⢿⡿⡿⣾⣿⣷⣄⣀⣀⣰⠇⣿⣟⡾⡽⢯⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⣿⣿⣷⠄⠀⠀⠀⣿⠂⠀⠘⣇⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢰⡟⠀⣼⠁⠀⠀⠀⠰⣧⠀⠀⣿⡏⢿⡄⠀⠀⠀⠀⠀⠀⢹⣇⢸⣶⣾⣷⡦⣄⣀⡈⢿⣿⠟⠋⣿⣿⣿⣰⣿⡽⢾⡽⣏⣿⣾⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⠀⣾⠃⣿⠀⠀⠀⠀⣿⠀⠀⠀⢹⡄⢹⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⣿⠀⠀⠀⠀⠀⢹⡄⠀⢿⡃⠈⣷⠀⠀⣆⠀⠀⣀⣤⣿⣿⣿⢉⠉⠈⠻⠿⠁⢀⠀⠀⢰⣿⣷⣭⣿⣿⣽⣯⣷⣿⣿⣿⣿⣿⣿⣶⣷⣦⡀⠀⠀⠀⣼⣿⠀⠀⠀⠀⣸⠏⠀⣿⠀⠀⠀⣼⠏⠀⠀⠀⢸⡇⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣀⣀⣀⣤⣿⣄⢻⡷⠶⠶⠶⠶⠬⣷⡄⢸⣧⣄⣬⣷⣄⠹⣦⣼⡿⠷⣯⣛⣿⡎⠀⠀⠀⠀⠀⠈⠁⠀⢀⣽⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣷⣟⣾⣻⣿⣿⣿⣿⣷⣾⣿⣧⡀⠀⠀⣰⠏⠀⢠⡇⠀⠀⣰⠟⠀⠀⠀⠀⢸⣧⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣤⣶⡿⠟⠛⠉⠁⠀⠀⠈⠻⢷⣤⣤⠄⠀⠀⠀⠻⣾⣧⠀⠀⠈⢹⣿⣿⣿⡄⠀⠀⣿⠈⢷⣦⣤⣤⣤⡶⣶⣶⣻⣽⣟⣉⣩⡿⠶⠾⣭⡿⢦⣄⢀⡟⢿⣯⣯⣟⢿⣿⣿⣿⣿⣿⣿⣿⣶⡾⠷⠶⠞⣿⠁⢀⣴⠿⠶⠾⠛⠛⢻⣿⠿⠳⠶⠷⠶⠶⠶⣦⣤⣤⣀⣀⠀
⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⠄⠀⠼⣿⣿⣿⣿⡀⠀⠘⢦⣌⠉⠙⠛⠋⠻⠉⣽⣿⣿⣿⣿⣧⠀⠀⠀⠀⠙⢦⣬⣿⡇⠈⢛⠻⢾⣿⣾⣿⠿⠿⢿⡉⢡⣿⣧⠀⣤⡾⠷⠖⠋⠀⠀⠀⠐⠒⠚⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠤⢤⣤⣀⣹⣿⣿⣿⣷⣂⣤⣤⣽⣷⣦⣤⣀⣀⣼⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⢹⣦⣷⠠⣈⣧⣀⡈⠻⠦⣄⣀⣨⣿⣟⣛⡓⠚⠛⠒⠒⠲⠶⠞⠳⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠷⢦⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠛⠛⠛⠋⠉⠉⠉⠀⠀⠀⠀⠈⠁⠉⠉⠉⠉⢻⣿⣿⣿⣿⣿⣇⣤⣴⠶⠾⠛⠛⠿⠶⢦⣭⣥⠴⠶⠞⠛⠉⠀⠀⠈⠉⠉⠙⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⠐⠀
⠀⠀⠀⠉⠉⠉⠀⡐⠒⠂⠤⠴⠤⠤⠤⠤⢤⣤⣤⣤⣤⣤⣀⣀⣀⡀⠀⠀⠀⠀⠀⢠⣤⣶⠶⠶⢶⡴⣦⣤⣤⣤⣍⣋⡛⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⣀⠀⣀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⣀⣀⣠⣄⣤⣤⣄⡠⠤⠤⠔⠂⠀⠀⠀⠀⠀⠀⠀*/    
    
#include <bits/stdc++.h>
#define ll long long
#define ld long double 
#define inf 0x3f3f3f3f
#define fi first
#define se second
#define FILE "TREE" 
#define cntbit(x) __builtin_popcount(x)
#define FOR(i,l,r) for (int i = l; i <= r; i++)
#define FORD(i,l,r) for (int i = l; i >= r; i--)
using namespace std;
//**Variable**//
int n, q;
int u, v;
ll w;        
vector<pair<int,ll>> g[100006];
ll sz[100006];
ll par[100006][20];
ll h[100006];
ll dep[100006];
ll sum[100006];
ll SumDis2[100006];
ll SumAll[100006];
ll SumDisAll[100006];
ll SumDisOut[100006];
ll mod = 1e9+7;
//**Struct**//

//**Function**//
void dfs(int u, int p) {
    sz[u] = 1;
    FOR(i, 1, 18)
        par[u][i] = par[par[u][i - 1]][i - 1];
    for (auto[v, w] : g[u])       
        if (v != p) {
            h[v] = h[u] + 1;
            dep[v] = dep[u] + w;
            par[v][0] = u;
            dfs(v, u);
            sz[u] += sz[v];
            sum[u] += sum[v];
            sum[u] += 1ll * w * sz[v];
            SumDis2[u] += SumDis2[v];
            SumDis2[u] += 1ll * w * w * sz[v];
            SumDis2[u] += 1ll * 2 * w * sum[v];
        }
}

int LCA(int u, int v) {
    if (h[u] < h[v]) swap(u, v);
    const int lg = log2(h[u]);
    FORD(i, lg, 0)
        if (h[u] - (1 << i) >= h[v])
            u = par[u][i];
    if (u == v) return u;
    FORD(i, lg, 0)
        if (par[u][i] != par[v][i])
            u = par[u][i],
            v = par[v][i];
    return par[u][0];
}

void DFS(int u, int p) {
    for (auto[v, w] : g[u])
        if (v != p) {
            SumAll[v] = SumAll[u];
            SumDisOut[v] = SumDisAll[u];
            SumDisOut[v] -= sum[v];
            SumDisOut[v] -= 1ll * w * sz[v];
            SumDisOut[v] += 1ll * w * (n - sz[v]);
            SumDisAll[v] = sum[v] + SumDisOut[v];
            SumDisAll[u] -= sum[v] + 1ll * sz[v] * w;
            SumAll[v] -= 1ll * w * w * sz[v];
            SumAll[v] -= 1ll * 2 * w * sum[v];
            SumAll[v] += 1ll * w * w * (n - sz[v]);
            SumAll[v] += 1ll * 2 * w * SumDisAll[u];
            SumDisAll[u] += sum[v] + 1ll * sz[v] * w;
            DFS(v, u);
        }
}

void Solve() {
    dfs(1, 1);
    SumAll[1] = SumDis2[1];
    SumDisAll[1]= sum[1];
    DFS(1, 1);
    FOR(i, 1, 18)
        FOR(j, 1, n)
            par[j][i] = par[par[j][i - 1]][i - 1];
    while (q -- ) {
        int u, v;
        cin >> u >> v;
        int cc = LCA(u, v);
        ll dist = dep[u] + dep[v] - 2 * dep[cc];
        if (u == v) {
            ll kq =  SumDis2[u] * 2ll - SumAll[u];
            cout << (kq<0 ? kq%mod + mod : kq%mod) << '\n';
            continue;
        }
        if (cc != v) {
            ll kq = -SumAll[u] + 2ll * (dist * dist * sz[v] + dist * 2 * sum[v] + SumDis2[v]);
            cout << (kq<0 ? kq%mod + mod : kq%mod) << '\n';
            continue;
        }
        ll Ans = SumAll[u];
        ll res = SumAll[v] - SumDis2[v];
        ll dis = dep[u] - dep[v];
        res += dis * dis * (n - sz[v]);
        res += 2ll * dis * SumDisOut[v];
        ll kq = Ans - 2ll * res ;
        cout << (kq<0 ? kq%mod + mod : kq%mod) << '\n';
    }
}
int main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);
    // freopen(FILE".inp","w",stdout);
    freopen(FILE".inp","r",stdin);
    freopen(FILE".out","w",stdout);
    cin>>n>>q;    
    for(int i = 1; i<n; i++){
        cin>>u>>v>>w;
        g[u].push_back({v,w});
        g[v].push_back({u,w});
    }
    Solve();
    return 0;
}
