/*⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⡟⢤⠓⣜⢢⢣⣙⣾⣛⢯⣟⢿⡻⣟⡿⣿⣻⡟⣿⡿⣿⣶⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⡿⢆⢣⢛⣬⡲⣏⡟⡶⣭⣛⣮⢟⣽⣹⣛⣷⣿⣝⢧⡿⣜⢿⡹⣟⡿⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⢿⠟⡩⡍⢦⣱⢎⡿⣹⢖⣻⡵⣻⣝⣧⣟⣾⣹⢮⢷⣛⡾⣼⣿⣞⣳⣭⡻⣽⣺⠵⣏⢿⣻⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⢏⣻⣌⣦⣱⣞⣧⣛⣮⢷⡹⣞⢧⣻⠵⣞⣧⣛⡶⢯⣻⣻⢼⡳⢿⣿⣿⣷⡭⢷⣻⣿⣻⣾⣯⢳⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣾⠾⠿⠛⠛⠛⠋⡉⢉⡉⠙⠙⢛⢛⠛⠻⠿⢿⣿⣼⣶⣯⡽⣏⡷⣭⢷⣛⡯⢿⣿⣿⣿⢧⣏⣿⣷⣻⣿⣧⣟⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣼⣿⣥⡷⠞⠛⢛⣻⣿⣛⠛⠉⠉⣙⣿⣿⠿⠛⠖⢶⢦⣤⣌⣉⠙⠛⠿⣾⣽⣞⡧⣟⢯⡞⣽⣻⣿⣼⣿⣿⣿⣿⣿⣮⡽⣿⣷⣶⣶⣶⣶⣶⠶⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣿⢏⣽⠟⠛⢶⣶⣟⣉⣈⣙⣷⣶⣟⣋⣁⣙⡳⣶⠞⠛⠛⠛⢾⣍⠛⠳⢦⣤⣉⠛⠿⢷⣿⣞⣳⡭⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⠀⠈⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣠⣾⣿⣿⣷⡾⡿⠿⢿⠻⣟⣻⢛⡟⣻⢛⡟⡿⢿⢿⣿⣿⣶⣶⣤⣤⣙⣷⣄⣠⣤⣭⣿⢶⣤⣉⠛⢷⣿⣿⣿⣿⣿⡟⠻⣿⣿⣿⣿⣿⣿⠿⠛⠻⣦⣀⣤⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣶⣶⡿⢿⠿⣛⠻⣍⠻⣔⣣⢞⡱⣏⠞⣽⢲⣥⢻⡜⣷⢻⡼⣫⢟⣮⢶⣭⠷⣯⢟⡿⡿⣿⣿⣷⣤⣄⡠⠈⣻⣏⠓⢦⣌⡻⢿⣿⣿⣧⠀⠀⠈⠉⠛⠉⠀⠀⠀⠀⠈⣹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣿⡿⣟⠛⠯⣍⢦⡙⣎⢳⡭⢳⢎⠿⣸⡱⣎⢗⢮⢻⡜⣧⢞⣧⢻⡜⣧⡻⣵⣫⢞⣳⣞⣻⣭⣟⡾⣽⣳⢯⣻⡽⣿⣿⣷⣴⣿⣦⣦⣬⣿⣷⣙⠻⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣋⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣻⣯⣭⣶⣵⣬⣭⣳⣜⢦⡝⢬⡓⡞⡭⣎⠟⣥⢳⡝⣮⢏⡷⣹⢎⡿⣜⡧⣟⣳⡽⢧⡯⣟⡵⣞⡷⣞⡾⣽⣳⢯⣟⣷⣻⣳⡽⣏⡿⣿⣿⣷⣬⣻⣛⣿⣿⣾⣻⢶⣄⠀⠀⠀⠀⠀⣠⡞⠉⠀⠈⠙⢷⡄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⣴⣾⣿⣿⠿⢟⡻⢍⠯⢭⡹⢍⠯⣙⡛⣛⢿⣿⠟⠿⠷⣷⣮⣽⣎⡳⣞⡵⣫⢞⣳⡻⣞⣧⢟⡾⣱⡟⣯⠷⣏⡿⣽⠾⣝⡷⣯⢷⣻⢮⡷⣯⢷⣻⣽⣻⢷⣯⢿⣿⣿⣿⣧⣸⣏⢿⡷⣿⣷⣄⠀⠀⠐⣿⠀⠀⠀⠀⢀⣾⣷⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣠⣴⣿⣿⢿⡛⠵⣊⡝⢦⣙⢮⡙⢦⡙⣎⠳⣥⣚⣶⠟⠁⠀⠀⠀⠀⠈⠉⠛⠛⠿⢾⣷⣯⣳⢏⡷⣞⣯⢟⣷⣻⡽⣻⡽⣽⡞⣿⡽⣻⣞⣯⠿⣽⣳⢯⣟⣷⣫⣽⣻⣞⡿⣮⢟⣿⣿⣿⣿⣜⣿⣤⣽⣿⣧⡀⠀⠻⣦⣀⠠⣄⣸⣾⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢠⣾⣿⣿⣯⣇⢧⡙⢮⡱⢞⡱⢎⠶⣙⢦⡙⢦⣻⣼⠟⠁⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⢿⣽⣞⡿⣞⣳⣟⣷⣻⢷⣻⢷⣻⢷⣛⣾⣻⠷⣯⣟⣾⣳⣟⣾⣳⢯⢿⣽⣻⣞⡷⣯⢿⣿⣿⣿⣿⣯⣿⠇⠀⠀⠈⠙⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣰⣿⣿⠋⢉⡉⠛⠿⣾⣥⡚⡥⢛⡬⢳⡍⠶⣹⣽⡿⠃⠀⠀⠀⠀⠀⣠⠏⠀⠀⠀⠀⢠⡏⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⣷⣟⣾⡽⣯⣟⣯⣟⣯⣟⡾⣽⣻⢷⣻⣞⣷⡻⣾⢽⣯⣟⣾⣳⢯⡿⣽⢯⣟⡿⣿⣿⣿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢠⣿⣿⠃⠌⡘⣀⠣⠐⡠⠙⠿⣷⣭⢒⢧⣚⣵⣿⠟⠀⠀⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣷⣿⡾⣽⢾⣽⣻⢷⣯⣟⣷⣻⢾⡽⣯⣟⣶⣻⢾⡽⣯⢿⣽⣻⢾⣽⣳⢿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣼⣿⡟⡀⢂⠱⢀⠊⡑⢠⢁⠂⠌⣿⣯⣶⣿⣿⠋⠀⠀⠀⠀⠀⠀⡼⠁⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢩⡿⠿⣿⣾⣽⣻⢾⡽⣾⡽⣯⣟⣷⣻⢾⡽⣯⣟⣷⣻⢾⣽⣻⢾⣽⣻⢾⡽⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢿⣿⡷⠀⡅⢚⠠⢁⢂⠡⢊⡐⠀⣿⣿⣿⡿⣡⠄⠀⠀⠀⠀⠀⣼⠃⠀⠀⢠⡆⠀⠀⣿⠁⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣷⠀⠈⠙⠻⢿⣿⣽⣳⣟⣷⣻⢾⡽⣯⣟⣷⣻⢾⣽⣻⢾⣽⣻⢾⡽⣯⣟⣷⡻⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⣿⣿⠐⡀⢣⠌⢂⠐⠌⡂⠄⢃⣿⣿⠟⣴⠋⠀⠀⠀⠀⠀⢰⡏⠀⠀⠀⣼⠀⠀⣸⣿⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⢿⣿⠀⠀⠀⠀⡀⠈⠛⠿⣾⣷⣯⣟⡿⣳⣟⡾⣽⣻⢾⣽⣻⢾⡽⣯⣟⣷⣻⢾⡽⣯⢿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢿⣿⣧⠐⢡⠂⡌⠰⣈⠰⢈⣸⣿⠫⣼⠃⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⢰⡇⠀⢠⣿⢿⡷⠶⠀⠀⠀⠘⢷⡀⠀⠀⢹⠀⠀⠀⠀⠀⢀⣸⣿⡄⠀⠀⠘⣿⠀⠀⠀⠈⣽⠻⢾⣿⣽⡾⣽⢿⣽⣻⢾⡽⣯⣟⣷⣻⢾⡽⣯⢿⣽⣻⣞⡿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⣿⣿⣧⠂⡌⠤⠑⡀⠆⣼⣿⠃⣼⠃⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⢠⣿⡇⠀⣼⡏⢸⣇⠀⣀⠀⠀⠀⠈⠹⣦⡀⠈⢧⠀⠀⠀⠀⢀⡿⠈⣷⠀⠀⠀⢹⡆⠀⠀⠀⢻⡇⠀⠈⠙⠻⣿⣟⣾⡽⢯⣿⡽⣾⣳⣯⢿⡽⣯⣟⣾⣳⢯⣟⡿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⢿⣿⣷⡀⢂⠔⡠⢹⣿⢃⣾⡏⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⢠⣿⠹⡇⢠⡟⠀⠀⢿⠀⢸⡆⠀⠀⠀⠀⠀⠙⠶⣜⣧⠀⠀⣴⣾⠃⠀⢸⣇⠀⠀⢸⢿⡀⠀⠀⢘⣇⠀⠀⠄⠀⠀⠉⠛⠿⣿⣷⣻⣷⣻⣞⡿⣽⣳⣟⡾⣽⣻⢾⡽⣯⣿⣿⣦⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠹⣿⣿⣶⣈⢰⣿⢃⣾⡿⠀⠀⠀⠀⠀⠀⠀⢀⢿⠀⢀⡾⠋⠀⣇⣼⠁⠀⠀⣘⣧⠈⣿⡄⠀⠀⠀⠀⠀⠀⠀⠈⠃⣸⣧⣇⣀⡀⠀⢻⣆⠀⢨⠈⢳⡄⠀⠈⣿⠀⠀⠀⠀⠘⠦⣄⠀⠸⣏⠛⠷⣿⣾⣽⣳⣟⡾⣽⢯⣟⣯⣟⣷⢻⣿⣿⣷⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⢧⣿⣿⡇⠀⣶⠀⠀⠀⠀⠀⢸⣻⠀⣾⠁⣠⣴⣿⣿⣷⣶⣶⣤⡙⢧⣼⢻⣄⠀⠀⠀⠀⠀⢠⠀⢀⡿⢛⣩⣥⣴⣶⣶⣿⣦⣧⣀⠀⠻⣆⠀⣿⠀⠀⠀⠀⠀⠀⠈⠙⢷⣿⠀⠀⠈⢻⡿⢿⣾⣽⣯⣟⡾⣽⡾⣽⣫⢿⣿⣿⣿⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣾⣿⣿⠀⢀⡿⠀⠀⠀⠀⠀⠈⣿⣾⣯⣾⣿⠿⠛⣿⡿⢟⢿⣿⣿⣶⡜⣇⠙⢦⡀⠀⠀⠀⢸⣧⡾⣧⠿⠿⣿⣟⠿⣻⠿⣿⣿⣿⣿⣦⡙⢷⣿⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⠃⢀⡀⢹⣿⢢⠏⣝⡻⢿⣿⣶⣿⣳⢯⡿⣿⣿⣿⣿⣄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣷⡏⠙⣿⠀⢸⣿⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⠁⠀⢸⣿⣯⣟⣞⣯⣿⣿⡆⠀⠀⠀⢻⢦⣄⠀⠐⢿⠁⠀⠀⣼⣿⣿⣏⣳⢻⡴⣻⢿⡟⢿⣿⣦⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠈⠙⣾⣿⣌⠻⣜⡹⢶⣌⢻⡙⡿⢿⣿⣿⣿⣿⣿⣿⠄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⣟⠀⣾⣿⡀⠀⢸⡄⠀⠀⠈⣿⡎⣿⠀⠀⢺⠋⠉⢿⣿⣿⣿⣿⣧⠀⠀⢀⡿⠖⠋⠙⠲⢾⣇⠀⣸⡏⠉⢻⣿⣿⣷⣷⣿⣿⡇⠀⢻⣿⣷⡤⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⡇⢸⣿⢢⡛⢬⠓⡧⢎⣧⣹⣼⣷⣾⣿⣿⣿⡿⠟⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠃⣿⠀⣿⠸⣇⠀⠀⢷⠀⠀⠀⢹⣷⠈⠀⠀⠘⣿⠟⠋⠻⣿⠿⠛⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠹⡟⠛⠛⠿⠿⠟⢿⣿⣿⡇⠀⣼⣿⠉⠀⠀⠀⠀⠀⠀⠀⣧⢸⡇⠀⠀⢻⣸⡿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠛⠛⠋⠉⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡀⣿⠀⢹⣆⠀⠘⢷⡀⠀⠀⢻⡇⠀⠀⠀⠹⣆⠀⠀⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⠀⠀⠀⠀⠀⠀⣹⠃⠘⣫⠇⠀⠀⠀⠀⠀⠀⠀⢰⣇⣾⠁⠀⠀⠘⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣷⣸⣇⠀⣿⣦⡀⠀⠛⢦⣄⡀⠹⣄⠀⠀⠀⠉⠳⠄⠀⠰⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⣄⠀⠀⠀⢀⡴⠋⢀⡼⠃⠀⠀⠀⢀⣴⠖⠀⠀⣾⢹⡇⠀⠀⠀⠘⢻⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡹⣦⣸⣏⠃⢄⠀⠀⠹⣿⡟⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⢀⣾⣋⣠⣴⢋⣀⣀⣀⣤⡶⠋⠁⠀⠀⣼⢯⡿⡇⠀⠀⠀⠀⠸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣽⣿⡄⠀⠀⠄⠀⠛⢷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠛⠙⠉⠉⠉⠉⢹⣿⡿⠋⠀⠀⠀⠀⣼⣿⠟⠁⢸⡀⠀⠀⠀⠀⢻⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡟⠻⣧⠀⠀⠀⠐⢀⡸⣿⠳⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⣻⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⡟⠉⠀⠀⠀⠀⢀⣼⠟⠁⠀⠀⠘⣇⠀⠀⠀⠀⠈⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⠀⠀⡹⣆⠀⠀⠀⠀⠙⢿⡄⠀⠉⠙⣻⣶⣦⣤⣤⣤⣤⣤⣿⣿⣏⣀⣀⣀⣀⣀⣀⣠⣤⣴⣤⣶⡶⠾⠛⠋⢩⡟⠀⠀⠀⠀⢀⣴⠟⠁⠀⠀⠀⠀⠀⢹⡀⠀⠀⡀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠋⠀⠀⢰⡧⠙⣧⡀⠀⠀⠀⠈⢿⣄⣴⣿⣭⠷⠟⠛⠛⠛⠛⢻⣿⣾⣿⣭⣉⣽⣿⡿⠛⠉⠁⠀⠀⢹⣇⠀⠀⠀⣾⠁⠀⠀⣠⡴⠟⠁⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⢱⡀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡟⠁⠀⠀⣠⣿⠁⠀⠈⠻⣦⡀⠀⠀⠸⣿⣿⣋⠀⠀⠀⠀⠀⠀⢘⣿⣛⣿⣀⡤⣿⡿⢁⣤⣶⣀⣀⣀⣀⣀⣹⣧⠀⢸⡇⢀⣴⡞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡇⠀⠀⠈⣷⡀⠀⠘⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠏⠀⠀⢀⣼⣿⠃⠀⠀⠀⠀⠀⠹⣦⣄⠀⣿⢻⡇⠀⠀⠀⠀⠀⠀⠉⠉⠉⣉⠀⠀⡿⠚⣋⣿⣿⡏⢻⣿⣿⣿⣿⡇⠀⠸⣷⠋⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡌⡷⠀⠀⠀⣿⣷⡄⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⢀⣴⠟⢹⠇⠀⠀⠀⡀⠀⠀⠐⡏⠈⢳⣾⢟⣿⡆⠀⠀⠀⠀⣷⡆⠀⠀⣠⣴⡾⠿⠾⣟⣻⣿⣿⣿⣿⣷⢯⣿⣿⠀⠀⠙⢷⣄⡘⢷⣀⣀⡀⠀⠀⠀⠀⠀⠀⢸⣷⢡⠀⠀⠀⠁⣿⢻⡄⠀⠸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠃⠀⣠⠟⠁⠀⣿⠀⠀⡆⢠⡷⠀⠀⣰⣏⣠⡾⠋⢹⣿⣧⢀⣤⡀⠀⣹⣦⣄⢰⣿⣹⡆⠀⠀⠈⡗⣿⣿⢯⡟⣿⣿⣿⣿⡄⠀⠀⠀⠈⠉⠋⠉⠁⠀⣤⠀⠀⠀⠀⠀⡸⣿⡧⠀⠀⠀⠀⣿⠀⠹⣆⠀⢹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣼⠇⢀⡾⠋⠀⠀⠀⣇⠀⢀⣏⣿⣿⠀⠘⠛⠋⠁⠀⠀⣿⡐⣿⠹⢿⠟⠁⢿⡿⡿⣾⣿⣷⣄⣀⣀⣰⠇⣿⣟⡾⡽⢯⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⣿⣿⣷⠄⠀⠀⠀⣿⠂⠀⠘⣇⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢰⡟⠀⣼⠁⠀⠀⠀⠰⣧⠀⠀⣿⡏⢿⡄⠀⠀⠀⠀⠀⠀⢹⣇⢸⣶⣾⣷⡦⣄⣀⡈⢿⣿⠟⠋⣿⣿⣿⣰⣿⡽⢾⡽⣏⣿⣾⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⠀⣾⠃⣿⠀⠀⠀⠀⣿⠀⠀⠀⢹⡄⢹⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⣿⠀⠀⠀⠀⠀⢹⡄⠀⢿⡃⠈⣷⠀⠀⣆⠀⠀⣀⣤⣿⣿⣿⢉⠉⠈⠻⠿⠁⢀⠀⠀⢰⣿⣷⣭⣿⣿⣽⣯⣷⣿⣿⣿⣿⣿⣿⣶⣷⣦⡀⠀⠀⠀⣼⣿⠀⠀⠀⠀⣸⠏⠀⣿⠀⠀⠀⣼⠏⠀⠀⠀⢸⡇⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣀⣀⣀⣤⣿⣄⢻⡷⠶⠶⠶⠶⠬⣷⡄⢸⣧⣄⣬⣷⣄⠹⣦⣼⡿⠷⣯⣛⣿⡎⠀⠀⠀⠀⠀⠈⠁⠀⢀⣽⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣷⣟⣾⣻⣿⣿⣿⣿⣷⣾⣿⣧⡀⠀⠀⣰⠏⠀⢠⡇⠀⠀⣰⠟⠀⠀⠀⠀⢸⣧⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣤⣶⡿⠟⠛⠉⠁⠀⠀⠈⠻⢷⣤⣤⠄⠀⠀⠀⠻⣾⣧⠀⠀⠈⢹⣿⣿⣿⡄⠀⠀⣿⠈⢷⣦⣤⣤⣤⡶⣶⣶⣻⣽⣟⣉⣩⡿⠶⠾⣭⡿⢦⣄⢀⡟⢿⣯⣯⣟⢿⣿⣿⣿⣿⣿⣿⣿⣶⡾⠷⠶⠞⣿⠁⢀⣴⠿⠶⠾⠛⠛⢻⣿⠿⠳⠶⠷⠶⠶⠶⣦⣤⣤⣀⣀⠀
⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⠄⠀⠼⣿⣿⣿⣿⡀⠀⠘⢦⣌⠉⠙⠛⠋⠻⠉⣽⣿⣿⣿⣿⣧⠀⠀⠀⠀⠙⢦⣬⣿⡇⠈⢛⠻⢾⣿⣾⣿⠿⠿⢿⡉⢡⣿⣧⠀⣤⡾⠷⠖⠋⠀⠀⠀⠐⠒⠚⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠤⢤⣤⣀⣹⣿⣿⣿⣷⣂⣤⣤⣽⣷⣦⣤⣀⣀⣼⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⢹⣦⣷⠠⣈⣧⣀⡈⠻⠦⣄⣀⣨⣿⣟⣛⡓⠚⠛⠒⠒⠲⠶⠞⠳⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠷⢦⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠛⠛⠛⠋⠉⠉⠉⠀⠀⠀⠀⠈⠁⠉⠉⠉⠉⢻⣿⣿⣿⣿⣿⣇⣤⣴⠶⠾⠛⠛⠿⠶⢦⣭⣥⠴⠶⠞⠛⠉⠀⠀⠈⠉⠉⠙⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⠐⠀
⠀⠀⠀⠉⠉⠉⠀⡐⠒⠂⠤⠴⠤⠤⠤⠤⢤⣤⣤⣤⣤⣤⣀⣀⣀⡀⠀⠀⠀⠀⠀⢠⣤⣶⠶⠶⢶⡴⣦⣤⣤⣤⣍⣋⡛⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⣀⠀⣀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⣀⣀⣠⣄⣤⣤⣄⡠⠤⠤⠔⠂⠀⠀⠀⠀⠀⠀⠀*/	
#include <bits/stdc++.h>
#define ll long long
#define ld long double 
#define inf 0x3f3f3f3f
#define fi first
#define se second
#define FILE "BSTR" 
using namespace std;
//**Variable**//
string str;
int n;
int q;
int k, p;
pair<pair<int,int>,int> query[200006];
int T[4*200006];
pair<int,int> TT[4*200006];
stack<int> st;
char ans[200006];
//**Struct**//

//**Function**//
void build(int id, int l, int r){
	if(l==r)return TT[id] = {str[l] - '0', -l}, void();
	int mid = (l + r) / 2;
	build(id*2,l,mid);
	build(id*2+1,mid+1,r);
	TT[id] = max(TT[id*2],TT[id*2+1]);
}
pair<int,int> get(int id, int l, int r, int u, int v){
	if(r < l || v < u || r < u || v < l)return {-1,0};
	if(u<=l && r<=v)return TT[id];
	int mid = (l + r) >> 1;
	auto left = get(id*2, l, mid, u, v);
	auto right = get(id*2+1, mid+1, r, u, v);
	return TT[id] = max(left,right);
}
void update(int id, int l, int r, int i){
	if (i < l || r < i)
        return;
    if (l == r)return T[id] = 1, void();
    int mid = (l + r) >> 1;
    update(id * 2, l, mid, i);
    update(id * 2 + 1, mid + 1, r, i);
    T[id] = T[id * 2] + T[id * 2 + 1];
}
int getIdx(int id, int l, int r, int val){
	if (l == r)return l;

    int mid = (l + r) / 2;
    if (val <= T[id * 2])
        return getIdx(id * 2, l, mid, val);
    return getIdx(id * 2 + 1, mid + 1, r, val - T[id * 2]);

}
int main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);
    // freopen(FILE".inp","w",stdout);
    freopen(FILE".inp","r",stdin);
    freopen(FILE".out","w",stdout);
    cin>>str;
    cin>>q;
    for(int i = 1; i<=q; i++){
    	cin>>k>>p;
    	query[i] = {{k,p},i};
    }
    sort(query+1, query + 1 + q);
    n = str.size();
    str = " " + str;
    build(1,1,n);
    int ed = n;
    st.push(0);
    for(int i = 1; i<=q; i++){
    	while(T[1] < query[i].fi.fi){
    		while(st.top()>=ed){
    			ed = st.top() - 1;
    			st.pop();
    		}
    		auto tmp = get(1,1,n,st.top() + 1, ed);
    		update(1,1,n,-tmp.se);
    		st.push(-tmp.se);
    	}
    	ans[query[i].se] = str[getIdx(1, 1, n, query[i].fi.se)];
    }
    // cout<<"\n";
    for(int i = 1; i <= q; i++){
    	cout<<ans[i]<<"\n";
    }
    return 0;
}
